

/**
 * hasOwnProperty.
 */

var has = Object.prototype.hasOwnProperty;

/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module.exports) {
    module.exports = {};
    module.client = module.component = true;
    module.call(this, module.exports, require.relative(resolved), module);
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);
  var index = path + '/index.js';

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (has.call(require.modules, path)) return path;
  }

  if (has.call(require.aliases, index)) {
    return require.aliases[index];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!has.call(require.modules, from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return has.call(require.modules, localRequire.resolve(path));
  };

  return localRequire;
};
require.register("component-indexof/index.js", Function("exports, require, module",
"\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};//@ sourceURL=component-indexof/index.js"
));
require.register("component-emitter/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar index = require('indexof');\n\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  fn._off = on;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var i = index(callbacks, fn._off || fn);\n  if (~i) callbacks.splice(i, 1);\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n//@ sourceURL=component-emitter/index.js"
));
require.register("RedVentures-reduce/index.js", Function("exports, require, module",
"\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};//@ sourceURL=RedVentures-reduce/index.js"
));
require.register("visionmedia-superagent/lib/client.js", Function("exports, require, module",
"/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root = 'undefined' == typeof window\n  ? this\n  : window;\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nfunction getXHR() {\n  if (root.XMLHttpRequest\n    && ('file:' != root.location.protocol || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n}\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pairs.push(encodeURIComponent(key)\n      + '=' + encodeURIComponent(obj[key]));\n  }\n  return pairs.join('&');\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  this.text = this.xhr.responseText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.parseBody(this.text);\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = request.parse[this.type];\n  return parse\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status || 1223 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var path = req.path;\n\n  var msg = 'cannot ' + method + ' ' + path + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.path = path;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var res = new Response(self);\n    if ('HEAD' == method) res.text = null;\n    self.callback(null, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"})\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  if (2 == fn.length) return fn(err, res);\n  if (err) return this.emit('error', err);\n  fn(res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n    if (0 == xhr.status) {\n      if (self.aborted) return self.timeoutError();\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  if (xhr.upload) {\n    xhr.upload.onprogress = function(e){\n      e.percent = e.loaded / e.total * 100;\n      self.emit('progress', e);\n    };\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var serialize = request.serialize[this.getHeader('Content-Type')];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  xhr.send(data);\n  return this;\n};\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.del = function(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n//@ sourceURL=visionmedia-superagent/lib/client.js"
));
require.register("sfapco-topcoat.js/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies\n */\n\nvar EventEmitter = require('events').EventEmitter\n  , domify = require('domify')\n\n\n/**\n * Expose `topcoat`\n */\n\nvar topcoat = module.exports = {};\n\n\n/**\n * Returns the head of an array like object\n *\n * @api private\n * @param {Array} `a`\n */\n\nfunction head (a) {\n\treturn a[0];\n}\n\n\n/**\n * Returns the head of an array like object\n *\n * @api private\n * @param {Array} `a`\n */\n\nfunction tail (a) {\n\treturn a[a.length - 1];\n}\n\n\n/**\n * Checks if a given element has a class\n *\n * @api public\n * @param {Element} `el`\n * @param {String} `className`\n */\n\nfunction hasClass (el, className) {\n\treturn !!~el.className.split(' ').indexOf(className);\n}\n\n\n/**\n * Adds a class to a given DOM element\n *\n * @api private\n * @param {Element} `el`\n * @param {String} `className`\n */\n\nfunction addClass (el, className) {\n\tif (hasClass(el, className)) return false;\n\tel.className += ' '+ className;\n\tel.className = el.className.trim();\n\treturn true;\n}\n\n\n/**\n * Removes a class to a given DOM element\n *\n * @api private\n * @param {Element} `el`\n * @param {String} `className`\n */\n\nfunction removeClass (el, className) {\n\tif (!hasClass(el, className)) return false;\n\tvar classes = el.className.split(' ');\n\tclasses.splice(classes.indexOf(className), 1);\n\tel.className = classes.join(' ');\n\tel.className = el.className.trim();\n\treturn true;\n}\n\n\n/**\n * Replaces a class with another\n *\n * @api private\n * @param {Element} `el`\n * @param {String} `className`\n * @param {String} `newClassName`\n */\n\nfunction replaceClass (el, className, newClassName) {\n\tremoveClass(el, className);\n\taddClass(el, newClassName);\n}\n\n\n/**\n * Proxy events from element to `EventEmitter` instance\n *\n * @api public\n * @param {Element} `el`\n * @param {Object} `emitter`\n */\n\nfunction proxyEvents (el, emitter) {\n\t// meta\n\tproxy('load');\n\tproxy('abort');\n\tproxy('error');\n\tproxy('invalid');\n\tproxy('reset');\n\tproxy('scroll');\n\tproxy('select');\n\tproxy('selectstart');\n\tproxy('submit');\n\tproxy('webkitfullscreenchange', 'fullscreenchange');\n\tproxy('webkitfullscreenerror', 'fullscreenerror');\n\tproxy('fullscreenchange');\n\tproxy('fullscreenerror');\n\n\t// interactions\n\tproxy('click');\n\tproxy('dblclick');\n\tproxy('contextmenu');\n\tproxy('drag');\n\tproxy('dragenter');\n\tproxy('dragend');\n\tproxy('dragleave');\n\tproxy('dragover');\n\tproxy('dragstart');\n\tproxy('drop');\n\n\t// mouse events\n\tproxy('mousemove');\n\tproxy('mouseover');\n\tproxy('mouseenter');\n\tproxy('mouseout');\n\tproxy('mouseleave');\n\tproxy('mouseup');\n\tproxy('mousedown');\n\tproxy('mousewheel');\n\n\t// copy/cut/paste events\n\tproxy('beforecopy');\n\tproxy('copy');\n\tproxy('beforecut');\n\tproxy('cut');\n\tproxy('beforepatse');\n\tproxy('patse');\n\n\t// input events\n\tproxy('blur');\n\tproxy('change');\n\tproxy('focus');\n\tproxy('input');\n\n\t// keyboard\n\tproxy('keydown');\n\tproxy('keyup');\n\tproxy('keypress');\n\t\n\n\n\tfunction proxy(event, as) {\n\t\tel.addEventListener(event, emitter.emit.bind(emitter, as || event), false);\n\t}\n}\n\n\n/**\n * `TopcoatElement` constructor\n *\n * @api public\n */\n\ntopcoat.TopcoatElement = TopcoatElement;\nfunction TopcoatElement (el) {\n\tif (!(this instanceof Button)) return new Button(el);\n\telse if (el && !(el instanceof Element)) throw new TypeError(\"expecting an instance of `Element`\");\n\tEventEmitter.call(this)\n\tthis.el = el || domify('<span />');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `EventEmitter`\nTopcoatElement.prototype.__proto__ = EventEmitter.prototype;\nTopcoatElement.prototype.constructor = TopcoatElement;\n\n\n/**\n * Returns the inner html of the element\n * as a string\n *\n * @api public\n */\n\nTopcoatElement.prototype.toString = function () {\n\treturn this.el.innerHTML;\n};\n\n\n/**\n * Enables the element\n *\n * @api public\n */\n\nTopcoatElement.prototype.enable = function () {\n\tremoveClass(this.el, 'is-disabled')\n\treturn this;\n};\n\n\n/**\n * Disables the element\n *\n * @api public\n */\n\nTopcoatElement.prototype.disable = function () {\n\taddClass(this.el, 'is-disabled')\n\treturn this;\n};\n\n\n/**\n * Checks if element instance is active\n *\n * @api public\n */\n\nTopcoatElement.prototype.isActive = function () {\n\treturn hasClass(this.el, 'is-active');\n};\n\n\n/**\n * Checks if the element is disabled\n *\n * @api public\n */\n\nTopcoatElement.prototype.isDisabled = function () {\n\treturn hasClass(this.el, 'is-disabled');\n};\n\n\n/**\n * Gets/sets the inner text of the element\n *\n * @api public\n * @param {String} `text`\n */\n\nTopcoatElement.prototype.text = function (text) {\n\tif (undefined === text) return this.el.innerText;\n\telse this.el.innerText = text;\n\treturn this;\n};\n\n\n/**\n * Gets/sets the inner html of the element\n *\n * @api public\n * @param {String} `text`\n */\n\nTopcoatElement.prototype.html = function (html) {\n\tif (undefined === html) return this.el.innerHTML;\n\tthis.el.innerHTML = html;\n\treturn this;\n};\n\n\n/**\n * Gets/sets the width of the element\n *\n * @api public\n * @param {Number} `width`\n */\n\nTopcoatElement.prototype.width = function (width) {\n\tif (undefined === width) return getComputedStyle(this.el).width;\n\tif (width !== width) return this;\n\tif ('number' === typeof width) width = String(width) + 'px';\n\tthis.el.style.setProperty('width', width);\n\treturn this;\n};\n\n\n/**\n * Gets/sets the height of the element\n *\n * @api public\n * @param {Number} `height`\n */\n\nTopcoatElement.prototype.height = function (height) {\n\tif (undefined === height) return getComputedStyle(this.el).height;\n\tif (height !== height) return this;\n\tif ('number' === typeof height) height = String(height) + 'px';\n\tthis.el.style.setProperty('height', height);\n\treturn this;\n};\n\n\n/**\n * Shows the element\n *\n * @api public\n */\n\nTopcoatElement.prototype.show = function (override) {\n\tthis.el.style.setProperty('display', override || 'block');\n\treturn this;\n};\n\n\n/**\n * Hides the element\n *\n * @api public\n */\n\nTopcoatElement.prototype.hide = function () {\n\tthis.el.style.setProperty('display', 'none');\n\treturn this;\n};\n\n\n/**\n * Appends an element as a child\n *\n * @api public\n * @param {Element} `el`\n */\n\nTopcoatElement.prototype.append = function (el) {\n\tthis.el.appendChild(el);\n\treturn this;\n};\n\n\n/**\n * Prepends an element as a child\n *\n * @api public\n * @param {Element} `el`\n */\n\nTopcoatElement.prototype.prepend = function (el) {\n\tthis.el.parentNode.insertBefore(el, this.el);\n\treturn this;\n};\n\n\n/**\n * Appends the element to an element\n *\n * @api public\n * @param {Element} `el`\n */\n\nTopcoatElement.prototype.appendTo = function (el) {\n\tel.appendChild(this.el);\n\treturn this;\n};\n\n\n/**\n * Prepends the element to an element\n *\n * @api public\n * @param {Element} `el`\n */\n\nTopcoatElement.prototype.prependTo = function (el) {\n\tel.parentNode.insertBefore(this.el, el);\n\treturn this;\n};\n\n\n/**\n * Removes the element from the DOM\n *\n * @api public\n */\n\nTopcoatElement.prototype.remove = function () {\n\tdelete this.el.parentNode.removeChild(this.el);\n\treturn this;\n};\n\n\n/**\n * Activates or deactivates the element\n *\n * @api public\n * @param {Boolean} `state`\n */\n\nTopcoatElement.prototype.active = function (state) {\n\tstate = (false === state)? false : true;\n\tif (state && !this.isActive()) addClass(this.el, 'is-active');\n\telse removeClass(this.el, 'is-active');\n\treturn this;\n};\n\n\n/**\n * Adds a class on the element\n *\n * @api public\n * @param {String} `className`\n */\n\nTopcoatElement.prototype.addClass = function (className) {\n\taddClass(this.el, className);\n\treturn this;\n};\n\n\n/**\n * Removes a class on the element\n *\n * @api public\n * @param {String} `className`\n */\n\nTopcoatElement.prototype.removeClass = function (className) {\n\tremoveClass(this.el, className);\n\treturn this;\n};\n\n\n/**\n * Replaces a class on the element\n *\n * @api public\n * @param {String} `className`\n * @param {String} `newClassName`\n */\n\nTopcoatElement.prototype.replaceClass = function (className, newClassName) {\n\treplaceClass(this.el, className, newClassName);\n\treturn this;\n};\n\n\n/**\n * Checks if the element has a class\n *\n * @api public\n * @param {String} `className`\n */\n\nTopcoatElement.prototype.hasClass = function (className) {\n\thasClass(this.el, className);\n\treturn this;\n};\n\n\n/**\n * `Button` constructor\n *\n * @api public\n * @param {Element} `el` - optional\n */\n\ntopcoat.Button = Button;\nfunction Button (el) {\n\tif (!(this instanceof Button)) return new Button(el);\n\telse if (el && !(el instanceof Element)) throw new TypeError(\"expecting an instance of `Element`\");\n\tTopcoatElement.call(this, el);\n\tthis.el = el || domify('<a></a>');\n\n\tthis.addClass('topcoat-button');\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nButton.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * `QuietButton` constructor\n *\n * @api public\n */\n\ntopcoat.QuietButton = QuietButton;\nfunction QuietButton (el) {\n\tif (!(this instanceof QuietButton)) return new QuietButton(el);\n\tButton.call(this, el);\n\tthis.removeClass('topcoat-button');\n\tthis.addClass('topcoat-button--quiet');\n}\n\n// inherit from `Button`\nQuietButton.prototype.__proto__ = Button.prototype;\n\n\n/**\n * `LargeButton` constructor\n *\n * @api public\n */\n\ntopcoat.LargeButton = LargeButton;\nfunction LargeButton (el) {\n\tif (!(this instanceof LargeButton)) return new LargeButton(el);\n\tButton.call(this, el);\n\tthis.removeClass('topcoat-button');\n\tthis.addClass('topcoat-button--large');\n}\n\n// inherit from `Button`\nLargeButton.prototype.__proto__ = Button.prototype;\n\n\n/**\n * `LargeQuietButton` constructor\n *\n * @api public\n */\n\ntopcoat.LargeQuietButton = LargeQuietButton;\nfunction LargeQuietButton (el) {\n\tif (!(this instanceof LargeQuietButton)) return new LargeQuietButton(el);\n\tButton.call(this, el);\n\tthis.replaceClass('topcoat-button', 'topcoat-button--large--quiet');\n}\n\n// inherit from `Button`\nLargeQuietButton.prototype.__proto__ = Button.prototype;\n\n\n/**\n * `CallToActionButton` constructor\n *\n * @api public\n */\n\ntopcoat.CallToActionButton = CallToActionButton;\nfunction CallToActionButton (el) {\n\tif (!(this instanceof CallToActionButton)) return new CallToActionButton(el);\n\tButton.call(this, el);\n\tthis.replaceClass('topcoat-button', 'topcoat-button--cta');\n}\n\n// inherit from `Button`\nCallToActionButton.prototype.__proto__ = Button.prototype;\n\n\n/**\n * `CallToActionButton` constructor\n *\n * @api public\n */\n\ntopcoat.LargeCallToActionButton = LargeCallToActionButton;\nfunction LargeCallToActionButton (el) {\n\tif (!(this instanceof LargeCallToActionButton)) return new LargeCallToActionButton(el);\n\tButton.call(this, el);\n\tthis.replaceClass('topcoat-button', 'topcoat-button--large--cta');\n}\n\n// inherit from `Button`\nLargeCallToActionButton.prototype.__proto__ = Button.prototype;\n\n\n/**\n * `IconButton` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.IconButton = IconButton;\nfunction IconButton (el) {\n\tif (!(this instanceof IconButton)) return new IconButton(el);\n\tButton.call(this, el);\n\tthis.replaceClass('topcoat-button', 'topcoat-icon-button');\n\tthis.el.appendChild(domify(\n\t\t'<span class=\"topcoat-icon topcoat-icon--menu-stack\"></span>'\n\t));\n\n}\n\n// inherit from `Button`\nIconButton.prototype.__proto__ = Button.prototype;\n\n\n/**\n * `QuietIconButton` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.QuietIconButton = QuietIconButton;\nfunction QuietIconButton (el) {\n\tif (!(this instanceof QuietIconButton)) return new QuietIconButton(el);\n\tIconButton.call(this, el);\n\tthis.replaceClass('topcoat-icon-button', 'topcoat-icon-button--quiet');\n\n}\n\n// inherit from `IconButton`\nQuietIconButton.prototype.__proto__ = IconButton.prototype;\n\n\n/**\n * `LargeIconButton` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.LargeIconButton = LargeIconButton;\nfunction LargeIconButton (el) {\n\tif (!(this instanceof LargeIconButton)) return new LargeIconButton(el);\n\tIconButton.call(this, el);\n\tthis.replaceClass('topcoat-icon-button', 'topcoat-icon-button--large');\n\n}\n\n// inherit from `IconButton`\nLargeIconButton.prototype.__proto__ = IconButton.prototype;\n\n\n/**\n * `LargeQuietIconButton` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.LargeQuietIconButton = LargeQuietIconButton;\nfunction LargeQuietIconButton (el) {\n\tif (!(this instanceof LargeQuietIconButton)) return new LargeQuietIconButton(el);\n\tIconButton.call(this, el);\n\tthis.replaceClass('topcoat-icon-button', 'topcoat-icon-button--large--quiet');\n\n}\n\n// inherit from `IconButton`\nLargeQuietIconButton.prototype.__proto__ = IconButton.prototype;\n\n\n/**\n * `List` constructor\n *\n * @api public\n */\n\ntopcoat.List = List;\nfunction List () {\n\tif (!(this instanceof List)) return new List();\n\tTopcoatElement.call(this);\n\tthis.el = domify('<div class=\"topcoat-list__container\"></div>');\n\tthis.header = ListHeader();\n\tthis.container = ListContainer();\n\tthis.length = [];\n\tthis.items = this.container.items;\n\n\tthis.append(this.header.el);\n\tthis.append(this.container.el);\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nList.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * Adds a list item to the bottom of the list\n *\n * @api public\n * @param {String|ListItem} `item`\n */\n\nList.prototype.push = \nList.prototype.add = function (item) {\n\tthis.container.push(item);\n\tthis.length = this.container.length;\n\treturn this;\n};\n\n\n/**\n * Adds a list item to the top of the list\n *\n * @api public\n * @param {String|ListItem} `item`\n */\n\nList.prototype.unshift = function (item) {\n\tthis.container.unshift(item);\n\tthis.length = this.container.length;\n\treturn this;\n};\n\n\n/**\n * Removes a list item from the bottom of the list\n *\n * @api public\n */\n\nList.prototype.pop = function () {\n\tvar item = this.container.pop();\n\tthis.length = this.container.length;\n\treturn item;\n};\n\n\n/**\n * Removes a list item from the top of the list\n *\n * @api public\n */\n\nList.prototype.shift = function () {\n\tvar item = this.container.shift();\n\tthis.length = this.container.length;\n\treturn item;\n};\n\n\n/**\n * Clears all items from the list\n *\n * @api public\n */\n\nList.prototype.clear = function () {\n\tthis.container.clear();\n\treturn this;\n};\n\n\n/**\n * Reverses all items in the list\n *\n * @api public\n */\n\nList.prototype.reverse = function () {\n\tthis.container.reverse();\n\treturn this;\n};\n\n\n/**\n * Calls a function for each element in the list\n *\n * @api public\n * @param {Function} `fn`\n */\n\nList.prototype.forEach = function (fn) {\n\tthis.container.forEach(fn);\n\treturn this;\n};\n\n\n/**\n * Returns true if the testing function returns\n * `true` for every element in the list\n *\n * @api public\n * @param {Function} `fn`\n */\n\nList.prototype.every = function (fn) {\n\treturn this.container.every(fn);\n};\n\n\n/**\n * Returns true if the testing function returns\n * `true` for at least one element in the list\n *\n * @api public\n * @param {Function} `fn`\n */\n\nList.prototype.some = function (fn) {\n\treturn this.container.some(fn);\n};\n\n\n/**\n * Returns the first index of a given input\n * in the element list\n *\n * @api public\n * @param {Function} `input`\n */\n\nList.prototype.indexOf = function (input) {\n\treturn this.container.indexOf(input);\n};\n\n\n/**\n * Returns the last index of a given input\n * in the element list\n *\n * @api public\n * @param {Function} `input`\n */\n\nList.prototype.lastIndexOf = function (input) {\n\treturn this.container.lastIndexOf(input);\n};\n\n\n\n/**\n * `ListHeader` constructor\n *\n * @api public\n */\n\ntopcoat.ListHeader = ListHeader;\nfunction ListHeader () {\n\tif (!(this instanceof ListHeader)) return new ListHeader();\n\tTopcoatElement.call(this);\n\tthis.el = domify('<h3 class=\"topcoat-list__header\"></h3>');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nListHeader.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * `ListContainer` constructor\n *\n * @api public\n */\n\ntopcoat.ListContainer = ListContainer;\nfunction ListContainer () {\n\tif (!(this instanceof ListContainer)) return new ListContainer();\n\tTopcoatElement.call(this);\n\tthis.el = domify('<ul class=\"topcoat-list\"></ul>');\n\tthis.items = [];\n\tthis.length = 0;\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nListContainer.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * Pushes a `ListItem` to the bottom of the list\n *\n * @api public\n * @param {String|ListItem} `item`\n */\n\nListContainer.prototype.push = \nListContainer.prototype.add = function (item) {\n\tif ('string' === typeof item)\n\t\titem = ListItem().text(item);\n\telse if (item instanceof Element)\n\t\titem = ListItem.wrap(item);\n\n\tif (!(item instanceof ListItem))\n\t\tthrow new TypeError(\"expecting `string` or an instance of `ListItem`\");\n\n\tthis.items.push(item);\n\tthis.append(item.el);\n\tthis.length++;\n\treturn this;\n};\n\n\n/**\n * Unnshifts a `ListItem` to the top of the list\n *\n * @api public\n * @param {String|ListItem} `item`\n */\n\nListContainer.prototype.unshift = function (item) {\n\tif ('string' === typeof item)\n\t\titem = ListItem().text(item);\n\telse if (item instanceof Element)\n\t\titem = ListItem.wrap(item);\n\n\tif (!(item instanceof ListItem))\n\t\tthrow new TypeError(\"expecting `string` or an instance of `ListItem`\");\n\n\tthis.items.unshift(item);\n\tthis.prepend(item.el);\n\tthis.length++;\n\treturn this;\n};\n\n\n/**\n * Pops a `ListItem` off from the bottom of the list\n *\n * @api public\n * @param {String|ListItem} `item`\n */\n\nListContainer.prototype.pop = function () {\n\tvar item = this.items.pop()\n\t  , nodes = this.el.querySelectorAll('.topcoat-list__item')\n\t  , node = tail(nodes)\n\n\tif (!item || !node)\treturn false;\n\telse if (node !== item.el) return false;\n\t\n\titem.remove();\n\tthis.length--;\n\treturn item;\n};\n\n\n/**\n * Shifts a `ListItem` off from the bottom of the list\n *\n * @api public\n * @param {String|ListItem} `item`\n */\n\nListContainer.prototype.shift = function () {\n\tvar item = this.items.shift()\n\t  , nodes = this.el.querySelectorAll('.topcoat-list__item')\n\t  , node = head(nodes)\n\n\tif (!item || !node)\treturn false;\n\telse if (node !== item.el) return false;\n\t\n\titem.remove();\n\tthis.length--;\n\treturn item;\n};\n\n\n\n/**\n * Reverses the order of the elements in the list container\n *\n * @api public\n */\n\nListContainer.prototype.reverse = function () {\n\tvar items = [].concat(this.items).reverse() // clone and reverse\n\tif (!items.length) return this;\n\tthis.clear();\n\tfor (var i = 0; i < items.length; ++i) this.push(items[i]);\n\treturn this;\n};\n\n\n/**\n * Clears the container of all items\n *\n * @api public\n */\n\nListContainer.prototype.clear = function () {\n\tfor (var i = this.items.length - 1; i >= 0; i--) this.pop();\n\treturn this;\n};\n\n\n/**\n * Calls a function for each element in the list\n *\n * @api public\n * @param {Function} `fn`\n */\n\nListContainer.prototype.forEach = function (fn) {\n\tthis.items.forEach(fn);\n\treturn this;\n};\n\n\n/**\n * Returns `true` if every element in the list\n * satisfies a provided test function\n *\n * @api public\n * @param {Function} `fn`\n */\n\nListContainer.prototype.every = function (fn) {\n\tthis.items.every(fn);\n\treturn this;\n};\n\n\n\n/**\n * Returns `true` if at least one element in the list\n * satisfies a provided test function\n *\n * @api public\n * @param {Function} `fn`\n */\n\nListContainer.prototype.some = function (fn) {\n\tthis.items.some(fn);\n\treturn this;\n};\n\n\n/**\n * Returns the first index of an element found\n * in the list\n *\n * @api public\n * @param {Mixed} `input`\n */\n\nListContainer.prototype.indexOf = function (input) {\n\treturn this.items.indexOf(input);\n};\n\n\n/**\n * Returns the last index of an element found\n * in the list\n *\n * @api public\n * @param {Mixed} `input`\n */\n\nListContainer.prototype.indexOf = function (input) {\n\treturn this.items.lastIndexOf(input);\n};\n\n\n/**\n * `ListItem` constructor\n *\n * @api public\n */\n\ntopcoat.ListItem = ListItem;\nfunction ListItem (el) {\n\tif (!(this instanceof ListItem)) return new ListItem(el);\n\tTopcoatElement.call(this);\n\tthis.el = el || domify('<li></li>');\n\tthis.addClass('topcoat-list__item');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nListItem.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * Wraps an element in a `ListItem` instance\n *\n * @api public\n * @param {Element} `el`\n */\n\nListItem.wrap = function (el) {\n\treturn ListItem().append(el);\n};\n\n\n/**\n * `NavigationBar` constructor\n *\n * @api public\n */\n\ntopcoat.NavigationBar = NavigationBar;\nfunction NavigationBar (el) {\n\tif (!(this instanceof NavigationBar)) return new NavigationBar(el);\n\tTopcoatElement.call(this);\n\tthis.el = el || domify('<div></div>');\n\tthis.items = [];\n\tthis.titleItem = null;\n\tthis.addClass('topcoat-navigation-bar');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nNavigationBar.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * Adds an item to the `NavigationBar` container\n *\n * @api public\n * @param {TopcoatElement} `item`\n * @param {Object} `opts`\n */\n\nNavigationBar.prototype.add = function (item, opts) {\n\tif (item instanceof NavigationBarItem) {\n\t\treturn this.add(TopcoatElement(item.el), opts);\n\t} else if (item instanceof TopcoatElement) {\n\t\tvar navItem = NavigationBarItem()\n\t\tnavItem.append(item.el);\n\t\tthis.items.push(navItem);\n\t\tthis.append(navItem.el);\n\t\tif (opts && opts.align) navItem.align(opts.align);\n\t\tif (opts && opts.size) navItem.size(opts.size);\n\t\treturn navItem;\n\t} else if (item instanceof Element) {\n\t\treturn this.add(TopcoatElement(item), opts);\n\t} else {\n\t\tthrow new TypeError(\"expecting instance of `TopcoatElement` or `NavigationBarItem`\");\n\t}\n};\n\n\n\n/**\n * Creates a title for the `NavigationBar` instance\n *\n * @api public\n * @param {String} `title`\n * @param {Object} `opts`\n */\n\nNavigationBar.prototype.title = function (title, opts) {\n\t// remove any existing title objects\n\tif (this.titleItem) this.titleItem.remove();\n\treturn this.add(NavigationBarTitle().text(title), opts);\n};\n\n\n\n/**\n * `NavigationBarItem` constructor\n *\n * @api public\n * @param {Element} `el`\n */\ntopcoat.NavigationBarItem = NavigationBarItem;\nfunction NavigationBarItem (el) {\n\tif (!(this instanceof NavigationBarItem)) return new NavigationBarItem(el);\n\tTopcoatElement.call(this);\n\tthis.el = el || domify(\n\t\t'<div></div>'\n\t);\n\n\tthis.addClass('topcoat-navigation-bar__item');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nNavigationBarItem.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * Sets the size of the item\n *\n * @api public\n * @param {String|Number} `size`\n */\n\nNavigationBarItem.prototype.size = function (size) {\n\tvar supported = [\n\t\t'quarter', 'half', 'third', 'full', 'three-quarters', 'two-thirds'\n\t];\n\n\tif (undefined === size) {\n\t\tfor (var i = 0; i < supported.length; ++i) {\n\t\t\tif (hasClass(thie.el, supported[i])) return supported[i];\n\t\t}\n\t}\n\n\tif ('string' === typeof size) {\n\t\tif (!~supported.indexOf(size))\n\t\t\tthrow new Error(\"unsupported size `\"+ size +\"`\");\n\n\t\t// sanitize before adding\n\t\tfor (var i = 0; i < supported.length; ++i)\n\t\t\tremoveClass(this.el, supported);\n\n\t\t// add size to class list\n\t\taddClass(this.el, size);\n\n\t} else if ('number' === typeof size) {\n\t\tthis.width(size);\n\t}\n\n\treturn this;\n};\n\n\n/**\n * Sets the alignment of the item\n *\n * @api public\n * @param {String|Number} `alignment`\n */\n\nNavigationBarItem.prototype.align = function (alignment) {\n\tvar supported = [\n\t\t'left', 'center', 'right'\n\t];\n\n\tif (undefined === alignment) {\n\t\tfor (var i = 0; i < supported.length; ++i) {\n\t\t\tif (hasClass(thie.el, supported[i])) return supported[i];\n\t\t}\n\t}\n\n\tif (!~supported.indexOf(alignment))\n\t\tthrow new Error(\"unsupported alignment `\"+ alignment +\"`\");\n\n\t// sanitize before adding\n\tfor (var i = 0; i < supported.length; ++i)\n\t\tremoveClass(this.el, supported);\n\n\t// add alignment to class list\n\taddClass(this.el, alignment);\n\n\treturn this;\n};\n\n\n/**\n * `NavigationBarTitle` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.NavigationBarTitle = NavigationBarTitle;\nfunction NavigationBarTitle (el) {\n\tif (!(this instanceof NavigationBarTitle)) return new NavigationBarTitle(el);\n\tTopcoatElement.call(this);\n\tthis.el = el || domify(\n\t\t'<h1></h1>'\n\t);\n\n\tthis.addClass('topcoat-navigation-bar__title')\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nNavigationBarTitle.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * `Input` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.Input = Input;\nfunction Input (el) {\n\tif (!(this instanceof Input)) return new Input(el);\n\tTopcoatElement.call(this);\n\tthis.el = el || domify(\n\t\t'<input type=\"text\" value=\"\" placeholder=\"\"/>'\n\t);\n\n\tthis.addClass('topcoat-text-input');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `TopcoatElement`\nInput.prototype.__proto__ = TopcoatElement.prototype;\n\n\n/**\n * Sets the input type\n *\n * @api public\n * @param {String} `type`\n */\n\nInput.prototype.type = function (type) {\n\tif (undefined === type) return this.el.getAttribute('type');\n\telse this.el.setAttribute('type', type);\n\treturn this;\n};\n\n\n/**\n * Gets/sets the input value\n *\n * @api public\n * @param {Mixed} `value`\n */\n\nInput.prototype.value = function (value) {\n\tif (undefined === value) return this.el.getAttribute('value');\n\telse (this.el.value = value) && this.el.setAttribute('value', value);\n\treturn this;\n};\n\n\n/**\n * Gets/sets the input place holder\n *\n * @api public\n * @param {Mixed} `value`\n */\n\nInput.prototype.placeholder = function (value) {\n\tif (undefined === value) return this.el.getAttribute('placeholder');\n\telse this.el.setAttribute('placeholder', value);\n\treturn this;\n};\n\n\n/**\n * `LargeInput` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.LargeInput = LargeInput;\nfunction LargeInput (el) {\n\tif (!(this instanceof LargeInput)) return new LargeInput(el);\n\tInput.call(this);\n\tthis.el = el || domify(\n\t\t'<input type=\"text\" value=\"\" placeholder=\"\"/>'\n\t);\n\tthis.addClass('topcoat-text-input--large');\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `Input`\nLargeInput.prototype.__proto__ = Input.prototype;\n\n\n/**\n * `SearchInput` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.SearchInput = SearchInput;\nfunction SearchInput (el) {\n\tif (!(this instanceof SearchInput)) return new SearchInput(el);\n\tInput.call(this);\n\tthis.el = el || domify(\n\t\t'<input type=\"text\" value=\"\" placeholder=\"\"/>'\n\t);\n\n\tthis.addClass('topcoat-search-input');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `Input`\nSearchInput.prototype.__proto__ = Input.prototype;\n\n\n/**\n * `LargeSearchInput` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.LargeSearchInput = LargeSearchInput;\nfunction LargeSearchInput (el) {\n\tif (!(this instanceof LargeSearchInput)) return new LargeSearchInput(el);\n\tInput.call(this);\n\tthis.el = el || domify(\t\n\t\t'<input type=\"text\" value=\"\" placeholder=\"\"/>'\n\t);\n\n\tthis.addClass('topcoat-search-input--large');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `Input`\nLargeSearchInput.prototype.__proto__ = Input.prototype;\n\n\n/**\n * `TextArea` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.TextArea = TextArea;\nfunction TextArea (el) {\n\tif (!(this instanceof TextArea)) return new TextArea(el);\n\tInput.call(this);\n\tthis.el = el || domify(\n\t\t'<textarea rows=\"6\" cols=\"36\" placeholder=\"\"></textarea>'\n\t);\n\n\tthis.addClass('topcoat-textarea');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `Input`\nTextArea.prototype.__proto__ = Input.prototype;\n\n\n/**\n * Gets/sets the row count\n *\n * @api public\n * @param {Number} `size`\n */\n\nTextArea.prototype.rows = function (size) {\n\tif (undefined === size) return this.el.getAttribute('rows');\n\telse if ('number' !== typeof size) throw new TypeError(\"expecting\ta `number` for row size\");\n\telse this.el.setAttribute('rows', size);\n\treturn this;\n};\n\n\n/**\n * Gets/sets the column count\n *\n * @api public\n * @param {Number} `size`\n */\n\nTextArea.prototype.columns = \nTextArea.prototype.cols = function (size) {\n\tif (undefined === size) return this.el.getAttribute('cols');\n\telse if ('number' !== typeof size) throw new TypeError(\"expecting\ta `number` for column size\");\n\telse this.el.setAttribute('cols', size);\n\treturn this;\n};\n\n\n/**\n * `LargeTextArea` constructor\n *\n * @api public\n * @param {Element} `el`\n */\n\ntopcoat.LargeTextArea = LargeTextArea;\nfunction LargeTextArea (el) {\n\tif (!(this instanceof LargeTextArea)) return new LargeTextArea(el);\n\tTextArea.call(this);\n\tthis.el = el || domify(\n\t\t'<textarea rows=\"6\" cols=\"36\" placeholder=\"\"></textarea>'\n\t);\n\tthis.addClass('topcoat-textarea--large');\n\t// proxy events\n\tproxyEvents(this.el, this);\n}\n\n// inherit from `Input`\nLargeTextArea.prototype.__proto__ = TextArea.prototype;\n\n\n//@ sourceURL=sfapco-topcoat.js/index.js"
));
require.register("jwerle-sregex/index.js", Function("exports, require, module",
"\n\n/**\n * module dependencies\n */\n\nvar define = Object.defineProperty\n\t,\tNULL = '\\0'\n\t, RNULL = /\\u0000$/\n\n/**\n * converts a string to regular expression\n * and allows retrieval of defined variables\n * when parsing\n *\n * @api public\n * @param {String} str\n */\n\nmodule.exports = sregex\nfunction sregex (str) {\n\tvar original, parts, compiled, defining, vars, currentVar, regex\n\t\n\tvars = [];\n\t\n\tif (str instanceof RegExp) {\n\t\tregex = str;\n\t} else {\n\t\toriginal = str;\n\t\tdefining = false;\n\t\tcompiled = '';\n\t\tcurrentVar = '';\n\t\tparts = str.split('');\n\t\tparts.push(NULL)\n\n\t\tparts.map(function (part, i) {\n\t\t\t\n\t\t\t// detect if a variable is being defined\n\t\t\tif (':' === part) {\n\t\t\t\tdefining = true\n\t\t\t}\n\t\t\t// detect if defining a variable and \n\t\t\t// the variable identifier is not \n\t\t\t// being used as a sequential part\n\t\t\t// or a whitespace is detected\n\t\t\telse if (defining && ':' !== part && /[a-zA-Z]+/.test(part)) {\n\t\t\t\tcurrentVar += part;\n\t\t\t} \n\t\t\t// if were defining a variable and\n\t\t\t// we've reached white space then\n\t\t\t// we can assume the definition\n\t\t\t// is complete\n\t\t\telse if (defining && !/[a-zA-Z]+/.test(part)) {\n\t\t\t\t// set defining `boolean` to false\n\t\t\t\tdefining = false;\n\t\t\t\t// push to `vars` stack\n\t\t\t\tvars.push(currentVar);\n\t\t\t\t// convert to regex\n\t\t\t\tcurrentVar = '([a-zA-Z0-9|,|\\.|\\'|\"|_|-|\\=|\\+]+)';\n\n\t\t\t\tif ('?' === part) currentVar += '?';\n\t\t\t\telse if (' ' === part) currentVar += '\\\\s?';\n\t\t\t\telse if ('\\\\' === part) currentVar += '\\\\';\n\t\t\t\telse if ('/' === part) currentVar += '\\\\/';\n\t\t\t\telse if ('|' === part) currentVar += '\\\\|';\n\n\t\t\t\t// append to compiled buffer\n\t\t\t\tcompiled += currentVar;\n\t\t\t\t// reset `currentVar` to an empty string\n\t\t\t\tcurrentVar = '';\n\t\t\t}\n\t\t\t// we can assume the following parts\n\t\t\t// are part of a regular string and\n\t\t\t// should just be appended to the\n\t\t\t// compiled string\n\t\t\telse {\n\t\t\t\t// finish defining variable\n\t\t\t\tdefining = false;\n\n\t\t\t\t// check if part needs to\n\t\t\t\t// be escaped\n\t\t\t\tif (' ' === part) {\n\t\t\t\t\tpart = '\\\\s?';\n\t\t\t\t} else if ('/' === part) {\n\t\t\t\t\tpart = '\\\\/';\n\t\t\t\t} else if ('|' === part) {\n\t\t\t\t\tpart = '\\\\|';\n\t\t\t\t}\n\n\t\t\t\t// append part to compiled buffer\n\t\t\t\tcompiled += part;\n\t\t\t}\n\t\t});\n\n\t\tregex = RegExp(compiled);\n\t}\n\n\n\tregex.vars = vars;\n\n\tdefine(regex, '_parts', {\n\t\tenumerable: false,\n\t\tget: function () { return parts; }\n\t});\n\n\tdefine(regex, '_compiled', {\n\t\tenumerable: false,\n\t\tget: function () { return compiled; }\n\t});\n\n\t// we need to preserve original functionality\n\t// and append `\\0` to string for proper testing\n\t;['test', 'exec'].map(function (method) {\n\t\t regex[method] = function (str) {\n\t    // append `\\0` character for proper testing\n\t    str += NULL;\n\t    return (/:?/)[method].call(regex, str);\n\t  };\n\t});\n\n\tregex.parse = function (str) {\n\t\tvar values, matches\n\n\t\t// add `\\0` for proper string matching\n\t\tstr += NULL\n\t\tmatches = str.match(this);\n\t\tvalues = {};\n\n\t\tif (null === matches) return values;\n\t\telse values._match = matches.shift().replace(RNULL, '');\n\n\t\t// map all matches as indexex\n\t\t// to the `vars` object\n\t\tmatches.map(function (match, i) {\n\t\t\tvalues[i] = match.replace(RNULL, '');\n\t\t});\n\n\t\tvars.map(function (v, i) {\n\t\t\tif (i > matches.length) return;\n\t\t\tvalues[v] = matches[i].replace(RNULL, '');\n\t\t});\n\n\t\treturn values;\n\t};\n\n\treturn regex\n}\n//@ sourceURL=jwerle-sregex/index.js"
));
require.register("juliangruber-events/index.js", Function("exports, require, module",
"var Emitter = require('emitter');\n\n// alias all the things!\nEmitter.prototype.addListener = Emitter.prototype.on;\nEmitter.prototype.removeListener = Emitter.prototype.off;\nEmitter.prototype.removeAllListeners = Emitter.prototype.off;\n\nEmitter.prototype.setMaxListeners = function(){ /* noop */ };\n\nexports.EventEmitter = Emitter;\n//@ sourceURL=juliangruber-events/index.js"
));
require.register("component-url/index.js", Function("exports, require, module",
"\n/**\n * Parse the given `url`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nexports.parse = function(url){\n  var a = document.createElement('a');\n  a.href = url;\n  return {\n    href: a.href,\n    host: a.host || location.host,\n    port: ('0' === a.port || '' === a.port) ? location.port : a.port,\n    hash: a.hash,\n    hostname: a.hostname || location.hostname,\n    pathname: a.pathname.charAt(0) != '/' ? '/' + a.pathname : a.pathname,\n    protocol: !a.protocol || ':' == a.protocol ? location.protocol : a.protocol,\n    search: a.search,\n    query: a.search.slice(1)\n  };\n};\n\n/**\n * Check if `url` is absolute.\n *\n * @param {String} url\n * @return {Boolean}\n * @api public\n */\n\nexports.isAbsolute = function(url){\n  return 0 == url.indexOf('//') || !!~url.indexOf('://');\n};\n\n/**\n * Check if `url` is relative.\n *\n * @param {String} url\n * @return {Boolean}\n * @api public\n */\n\nexports.isRelative = function(url){\n  return !exports.isAbsolute(url);\n};\n\n/**\n * Check if `url` is cross domain.\n *\n * @param {String} url\n * @return {Boolean}\n * @api public\n */\n\nexports.isCrossDomain = function(url){\n  url = exports.parse(url);\n  return url.hostname !== location.hostname\n    || url.port !== location.port\n    || url.protocol !== location.protocol;\n};//@ sourceURL=component-url/index.js"
));
require.register("visionmedia-debug/index.js", Function("exports, require, module",
"if ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n//@ sourceURL=visionmedia-debug/index.js"
));
require.register("visionmedia-debug/debug.js", Function("exports, require, module",
"\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n//@ sourceURL=visionmedia-debug/debug.js"
));
require.register("component-trim/index.js", Function("exports, require, module",
"\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n//@ sourceURL=component-trim/index.js"
));
require.register("component-querystring/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies.\n */\n\nvar trim = require('trim');\n\n/**\n * Parse the given query `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nexports.parse = function(str){\n  if ('string' != typeof str) return {};\n\n  str = trim(str);\n  if ('' == str) return {};\n\n  var obj = {};\n  var pairs = str.split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    var parts = pairs[i].split('=');\n    obj[parts[0]] = null == parts[1]\n      ? ''\n      : decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n};\n\n/**\n * Stringify the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nexports.stringify = function(obj){\n  if (!obj) return '';\n  var pairs = [];\n  for (var key in obj) {\n    pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]));\n  }\n  return pairs.join('&');\n};\n//@ sourceURL=component-querystring/index.js"
));
require.register("kaerus-component-elem/shims/querySelector.js", Function("exports, require, module",
"// http://codereview.stackexchange.com/questions/12444/queryselectorall-shim-for-non-ie-browsers\n\nif( typeof document.querySelector == \"undefined\") {\n    document.querySelectorAll = function(sel) {\n        var sels = sel.split(\",\"),\n            run = function(node,selector) {\n                var sel = selector.split(/[ >]+/), com = selector.match(/[ >]+/g) || [], s, c, ret = [node], nodes, l, i, subs, m, j, check, x, w, ok,\n                    as;\n                com.unshift(\" \");\n                while(s = sel.shift()) {\n                    c = com.shift();\n                    if( c) c = c.replace(/^ +| +$/g,\"\");\n                    nodes = ret.slice(0);\n                    ret = [];\n                    l = nodes.length;\n                    subs = s.match(/[#.[]?[a-z_-]+(?:='[^']+'|=\"[^\"]+\")?]?/gi);\n                    m = subs.length;\n                    for( i=0; i<l; i++) {\n                        if( subs[0].charAt(0) == \"#\") ret = [document.getElementById(subs[0].substr(1))];\n                        else {\n                            check = c == \">\" ? nodes[i].children : nodes[i].getElementsByTagName(\"*\");\n                            if( !check) continue;\n                            w = check.length;\n                            for( x=0; x<w; x++) {\n                                ok = true;\n                                for( j=0; j<m; j++) {\n                                    switch(subs[j].charAt(0)) {\n                                    case \".\":\n                                        if( !check[x].className.match(new RegExp(\"\\\\b\"+subs[j].substr(1)+\"\\\\b\"))) ok = false;\n                                        break;\n                                    case \"[\":\n                                        as = subs[j].substr(1,subs[j].length-2).split(\"=\");\n                                        if( !check[x].getAttribute(as[0])) ok = false;\n                                        else if( as[1]) {\n                                            as[1] = as[1].replace(/^['\"]|['\"]$/g,\"\");\n                                            if( check[x].getAttribute(as[0]) != as[1]) ok = false;\n                                        }\n                                        break;\n                                    default:\n                                        if( check[x].tagName.toLowerCase() != subs[j].toLowerCase()) ok = false;\n                                        break;\n                                    }\n                                    if( !ok) break;\n                                }\n                                if( ok) ret.push(check[x]);\n                            }\n                        }\n                    }\n                }\n                return ret;\n            }, l = sels.length, i, ret = [], tmp, m, j;\n        for( i=0; i<l; i++) {\n            tmp = run(this,sels[i]);\n            m = tmp.length;\n            for( j=0; j<m; j++) {\n                ret.push(tmp[j]);\n            }\n        }\n        return ret;\n    };\n    document.querySelector = function(sel) {\n        var ret = this.querySelectorAll(sel);\n        if( ret.length > 0) return ret[0];\n        else return null;\n    };\n    if( typeof HTMLElement != \"undefined\") {\n        HTMLElement.prototype.querySelector = document.querySelector;\n        HTMLElement.prototype.querySelectorAll = document.querySelectorAll;\n    }\n    else {\n        dommods_extend.push(function() {\n            var a = document.getElementsByTagName(\"*\"), l = a.length, i;\n            for( i=0; i<l; i++) {\n                a[i].querySelector = document.querySelector;\n                a[i].querySelectorAll = document.querySelectorAll;\n            }\n        });\n        // dommods_extend is an array of functions that are run whenever the DOM is updated,\n        // to apply changes such as auto-resizing textareas, default value for <select> and so on.\n    }\n}//@ sourceURL=kaerus-component-elem/shims/querySelector.js"
));
require.register("kaerus-component-elem/index.js", Function("exports, require, module",
"/* require shims */\nrequire('./shims/querySelector.js');\n\nfunction query(method,root,selector){\n    if(!root) return document[method](selector);\n\n    var elem = root(),\n        id = elem.id;\n\n        elem.id = 'guid' + root.guid;\n\n    try {\n        selector = '#' + elem.id + ' ' + selector;\n        return elem[method](selector);\n    } catch (e) {\n        throw e;\n    } finally {\n        elem.id = id;\n    }    \n}\n\nvar Query = {\n    one: function(root,selector){\n        var elem = query('querySelector',root,selector);\n        \n        if(!elem) return;\n\n        var ret = wrapElement(elem);\n\n        return ret;\n    },\n    all: function(root,selector){\n        var elems = query('querySelectorAll',root,selector);\n        \n        if(!elems.length) return;\n\n        var ret = [];\n    \n        for(var i = 0, l = elems.length; i < l; i++ )\n            ret[ret.length] = wrapElement(elems.item(i));\n\n        return ret;\n    }\n};\n\nvar Data = {\n    store: {},\n    guid: 'data' + (new Date().getTime()),\n    guidCounter: 1\n}; \n\nfunction prepare(args){\n    var elem, selector, i = 0, \n        args = Array.prototype.slice.call(args);\n\n    if(typeof args[0] === 'string' && args[1] === undefined) selector = args[i++];\n    else {\n        if(typeof args[i] === 'string') elem = Query.one(undefined,args[i++]);\n        else elem = wrapElement(args[i++]);\n\n        if(typeof args[i] === 'string') selector = args[i++];\n    }\n\n    if(!elem && !selector) throw TypeError(\"selector <string> missing\");\n\n    return [elem,selector];\n}\n\nfunction Elem(){\n    /* get element by selector */\n    if(!(this instanceof Elem)){\n        var args = prepare(arguments);\n\n        if(!args[1]) return args[0];\n\n        return Query.one.apply(null,args);\n    }\n    /* create new element */\n    var tagName = arguments[0];\n\n    if(!tagName) tagName = 'div';\n\n    return wrapElement(document.createElement(tagName));\n}\n\nElem.all = function(){\n    var args = prepare(arguments);\n    \n    return Query.all.apply(null,args);\n}          \n\nfunction proxy(context,handler){\n    var curry = [].slice.call(arguments,2);\n\n    return function(){\n        var args = [].slice.call(arguments).concat(curry);\n\n        return handler.apply(context,args);\n    }\n}\n\nfunction wrapElement(elem){\n\n    if(!elem) return;\n\n    /* already wrapped */\n    if(typeof elem === 'function' && elem.name === 'element')\n        return elem;\n\n    var data = getData(elem),\n        wrapped = proxy(elem,element,data);\n\n    function element(selector){\n        if(selector) \n            return Query.one(wrapped,selector);\n        \n        /* unwrapped */\n        return elem;\n    }\n\n    /* todo: refactor these out */\n    wrapped.guid = elem[Data.guid];\n\n    wrapped.toString = function(format){\n        return elem.outerHTML;\n    }\n\n    wrapped.html = function(content){\n        if(content !== undefined)\n            elem.innerHTML = content;\n        else return elem.innerHTML;\n\n        return this;\n    }\n\n    wrapped.text = function(content){\n        if(content !== undefined)\n            elem.innerText = content;\n        else return elem.innerText;\n\n        return this;        \n    }\n\n    wrapped.data = function(key,val){\n        var data = getData(elem);\n\n        if(key === undefined) return data;\n        if(val !== undefined) data[key] = val;\n\n        return data[key];\n    }\n\n    wrapped.append = function(content){\n\n        if(Array.isArray(content)){\n            content.forEach(function(c){\n                wrapped.append(c);\n            });\n\n            return this;\n        }\n\n        var e = createElement(content);\n   \n        elem.appendChild(e);\n\n        return this;\n    }\n\n    wrapped.prepend = function(content){\n        \n        if(Array.isArray(content)){\n            content.forEach(function(c){\n                wrapped.prepend(c);\n            });\n\n            return this;\n        }\n\n        var e = createElement(content);\n\n        elem.insertBefore(e,elem.firstChild);\n\n        return this;\n    }\n\n    return wrapped;\n}\n\nfunction createElement(content){\n    var elem;\n\n    if(typeof content === 'string'){\n        elem = document.createElement('div');\n        elem.innerHTML = content;\n        elem = elem.firstChild;\n    } else if(typeof content === 'function'){\n        elem = createElement(content());\n    } else elem = content;\n    \n    return elem;     \n}\n\nfunction extend(elem,obj) {\n    for(var o in obj)\n        if(!elem[o]) elem[o] = obj[o];\n}\n\nfunction getData(elem){\n    var guid = elem[Data.guid];\n\n    if(!guid){\n        guid = elem[Data.guid] = Data.guidCounter++;\n        Data.store[guid] = {};\n    }\n\n    return Data.store[guid];\n}\n\nfunction removedata(elem){\n    var guid = elem[Data.guid];\n\n    if(!guid) return;\n\n    delete Data.store[guid];\n\n    try {\n        delete elem[Data.guid];\n    } catch (e) {\n        if(elem.removeAttribute){\n            el.removeAttribute(Data.guid);\n        }\n    }\n}   \n\nmodule.exports = Elem;//@ sourceURL=kaerus-component-elem/index.js"
));
require.register("kaerus-component-emitter/index.js", Function("exports, require, module",
" // Emitter /////////////////////////////////////////////////////////////////////////////\nfunction Emitter(obj) {\n    /* Emitter mixin */\n    if(obj) {\n        for(var key in Emitter.prototype) {\n            obj[key] = Emitter.prototype[key];\n        }\n        obj._events = {};\n        return obj;\n    }\n\n    if(!(this instanceof Emitter)) {\n        return new Emitter;\n    }\n\n    this._events = {};  \n}\n\nEmitter.prototype.listeners = function(event) {\n    var handlers = this._events[event];\n\n    if(!handlers) return [];\n    \n    return handlers.filter(function(f){return f !==before && f !==after});\n}\n\nEmitter.prototype.hasListeners = function(event) {\n    return !!this._events[event];\n}\n\nfunction before(){};\nfunction after(){};\n\nEmitter.prototype.on = function(event,handler,first) {\n    event = event.split(' ');\n    \n    if(event.length > 1) {\n        for(var i=0; event[i]; i++) {\n            this.on(event[i],handler,first);\n        }    \n\n        return this;\n    } else event = event[0];\n\n    var events = this._events[event];\n\n    if(!events) events = this._events[event] = [before,after];\n\n    if(first === undefined) events.splice(events.indexOf(after),0,handler);\n    else if(first === true) events.splice(events.indexOf(before),0,handler);\n    else events[events.length] = handler;     \n\n    return this;\n}\n\nEmitter.prototype.before = function(event,handler) {\n    return this.on(event,handler,true);\n}\n\nEmitter.prototype.after = function(event,handler) {\n    return this.on(event,handler,false);\n}\n\nEmitter.prototype.off = function(event,handler) {\n\n    if(!arguments.length) {\n        this._events = {};\n        return this;\n    }    \n\n    var events = this._events[event];\n\n    if(!events) return this;\n\n    if(!handler) {\n        delete this._events[event];\n    } else {\n        this._events[event] = this._events[event].filter(function(f) {\n            return (f._of || f) !== handler;\n        });\n    } \n\n    return this;\n}\n\nEmitter.prototype.emit = function(event) {\n    var args = Array.prototype.slice.call(arguments,1),\n        events = this.listeners(event);\n\n    for(var i = 0, l = events.length; i < l; i++){\n        if(events[i].apply(this,args) === false) break;\n    }        \n\n    return this;\n}\n\nEmitter.prototype.once = function(event,handler) {\n    var self = this;\n\n    function once() {\n        self.off(event, handler);\n        handler.apply(this, arguments);\n    }\n    \n    this.on(event, once);\n\n    once._of = handler;\n\n    return this;\n}\n\nmodule.exports = Emitter;\n//@ sourceURL=kaerus-component-emitter/index.js"
));
require.register("kaerus-component-event/index.js", Function("exports, require, module",
"var Emitter = require('emitter'),\n    Elem = require('elem');\n\n// Event /////////////////////////////////////////////////////////////////////////////\n\nvar Event = {\n    emitter: new Emitter(),\n    normalize: function(event) {\n        // normalize 'inspired' from Secrets of the Javascript Ninja by John Resig \n        // Reference http://www.quirksmode.org/dom/events/ \n        function returnTrue() { return true; } \n        function returnFalse() { return false; }\n\n        if (!event || !event.stopPropagation) { \n            // Clone the old object so that we can modify the values \n            event = Event.clone(event || window.event);\n\n            // The event occurred on this element \n            if (!event.target) {\n                event.target = event.srcElement || document;\n            }\n            // Handle which other element the event is related to \n            event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n            // Stop the default browser action \n            event.preventDefault = function () {\n                event.returnValue = false; \n                event.isDefaultPrevented = returnTrue;\n            }; \n            event.isDefaultPrevented = returnFalse;\n            // Stop the event from bubbling \n            event.stopPropagation = function () {\n                event.cancelBubble = true; \n                event.isPropagationStopped = returnTrue;\n            }; \n            event.isPropagationStopped = returnFalse;\n            // Stop the event from bubbling and executing other handlers \n            event.stopImmediatePropagation = function () {\n                this.isImmediatePropagationStopped = returnTrue; \n                this.stopPropagation();\n            }; \n            event.isImmediatePropagationStopped = returnFalse;\n            // Handle mouse position \n            if (event.clientX != null) {\n                var doc = document.documentElement, \n                    body = document.body;\n\n                event.pageX = event.clientX + (doc && \n                        doc.scrollLeft || body && \n                        body.scrollLeft || 0) - (doc && \n                        doc.clientLeft || body && \n                        body.clientLeft || 0);\n\n                event.pageY = event.clientY + (doc && \n                        doc.scrollTop || body && \n                        body.scrollTop || 0) - (doc && \n                        doc.clientTop || body && \n                        body.clientTop || 0);\n            }\n            // Handle key presses \n            event.which = event.charCode || event.keyCode;\n            // Fix button for mouse clicks: // 0 == left; 1 == middle; 2 == right\n            if (event.button != null) {\n                event.keyCode;\n                event.button = (event.button & 1 ? 0 : (event.button & 4 ? 1 : (event.button & 2 ? 2 : 0)));\n            }\n            // mouse scroll\n            event.wheelDelta = event.wheelDelta || -event.Detail * 40; \n        }    \n\n        return Event.extend(event,Event.methods);\n    },\n    methods: {\n\n    },\n    extend: function(event,obj) {\n        for(var o in obj) {\n            if(!event[o]) event[o] = obj[o];\n        }\n\n        return event;\n    },\n    clone: function(event,obj) {\n        obj = obj ? obj : {};\n\n        for (var p in event) { \n            obj[p] = event[p];\n        }\n        return obj;\n    },\n    bind: function(el,ev,fn,cap){\n        if(el.addEventListener){\n            el.addEventListener(ev, fn, !!cap);\n        } else if (elm.attachEvent){\n            el.attachEvent('on' + ev, fn);\n        }  else el['on' + ev] = fn;\n\n        return el;\n    },\n    unbind: function(el,ev,fn){\n        if(el.removeEventListener){\n            el.removeEventListener(ev, fn, false);\n        } else if (el.detachEvent){\n            el.detachEvent('on' + ev, fn);\n        } else el['on' + ev] = null;\n\n        return el;\n    },\n    add: function(el,ev,fn){\n        ev = ev.split(' ');\n        \n        var i = ev.length;\n        \n        while(1 < i--) Event.add(el,ev[i],fn);\n        \n        ev = ev[0];\n\n        var data = Elem(el).data();\n\n        if(!data.__emitter__) {\n            data.__emitter__ = new Emitter();\n        }    \n        \n        Event.bind(el,ev,onEvent);\n\n        data.__emitter__.on(ev,fn);\n\n        return data.__emitter__;\n    }, \n    remove: function(el,ev,fn){\n        ev = ev.split(' ');\n\n        var i = ev.length;\n        \n        while(1 < i--) Event.remove(el,ev[i],fn);\n        \n        ev = ev[0];\n\n        var data = Elem(el).data();\n\n        if(data.__emitter__) {\n            data.__emitter__.off(ev,fn);\n            if(!data.__emitter__.hasListeners(ev))\n                Event.unbind(el,ev,onEvent);\n        }\n\n        return data.__emitter__; \n    }, \n    delegate: function(el,ev,fn){\n\n        Event.bind(document,ev,onDelegate,true);\n\n        var guid = Elem(el).guid;\n\n        Event.emitter.on(ev+'>'+guid,fn);\n\n        return el;\n    },\n    undelegate: function(el,ev,fn){\n        var guid = Elem(el).guid;\n\n        if(guid) {\n            Event.emitter.off(ev+'>'+guid,fn);\n        }\n\n        return el;\n    }\n}\n\nfunction onEvent(event) {\n    event = Event.normalize(event);\n\n    var data = Elem(event.target).data();\n\n    if(!data.__emitter__) throw \"event has no emitter\";\n\n    data.__emitter__.emit(event.type,event);\n} \n\nfunction onDelegate(event) {\n    var guid = Elem(event.target).guid;\n    \n    Event.emitter.emit(event.type+'>'+guid,event);\n}\n\nmodule.exports = Event; \n//@ sourceURL=kaerus-component-event/index.js"
));
require.register("kaerus-component-hash/index.js", Function("exports, require, module",
"var Event = require('event'),\n    PREPEND = '', \n    SEPARATE = '/', \n    APPEND = '', \n    POLLINTERVAL = 250,\n    routing = {};\n  \n/* singleton */\nvar Hasher = {\n    hash: { \n        path:null,            \n        onChange: null,\n        poll: POLLINTERVAL,\n        _a: APPEND,\n        _p: PREPEND, \n        _s: SEPARATE, \n        change: function(path){\n            if(this.path !== path){\n                var from = this.toString(), \n                    to = this.toString(path),\n                    match = Object.keys(routing).filter(function(route){\n                        return to.match(RegExp(route));\n                    }).sort(), n = match.length;\n                \n                this.path = path; \n                \n                function next(x){ if(n--) routing[match[n]](to,from,next,x) }\n                if(n) next();       \n            }               \n        },\n        toString: function(path){\n            if(!path || path === undefined) path = this.path;\n\n            var a = path.indexOf(this._p),\n                b = path.lastIndexOf(this._a);\n\n            if(a < 0) a = 0;\n            else a+=this._p.length;\n            if(b <= 0) b = path.length;   \n\n            return path.substr(a,b);\n        },  \n        toArray: function(path){ \n            return this.toString(path).split(this._s); \n        },\n        toPath: function(array){            \n            return this._p + array.join(this._s) + this._a;\n        }\n    },  \n    get: function(path) {\n        return this.hash.toString(path);\n    },\n    set: function(newUrl){\n        this.hash.change(this.uri(newUrl));\n    },\n    uri: function(url){\n        url = url || window.location.href;\n        var h = url.indexOf('#');\n\n        return h < 0 ? '' : decodeURIComponent(url.substr(h+1,url.length));\n    },\n    update: function(path){\n        if(Array.isArray(path)){\n            path = this.hash.toPath(path);\n        } else {\n            path = this.hash.toPath([].slice.call(arguments));\n        }    \n\n        if(path !== this.hash.path){\n            this.hash.change(path); \n            window.location.hash = '#'+ encodeURI(path); \n        }\n    },\n    event: function(event) {\n        event = Event.normalize(event);\n        Hasher.set(event.newURL);\n    },\n    route: function(match,callback){\n        routing[match] = callback;\n\n        return this;\n    },\n    init: function() {\n        var i = 0, options = {}, callback;\n\n        if(typeof arguments[i] === 'object')\n            options = arguments[i++];\n        if(typeof arguments[i] === 'function')\n            callback = arguments[i++];\n\n        this.start(options,callback);\n    },\n    start: function(options,callback){\n\n        this.hash.path = this.uri();\n\n        /* configure hash divisors */\n        this.hash._p = options.prepend || PREPEND;\n        this.hash._s = options.separate || SEPARATE;\n        this.hash._a = options.append || APPEND;\n\n        /* poll interval in msec (used in fallback mode only) */\n        this.hash.poll = options.poll || POLLINTERVAL;\n\n        if('onhashchange' in window) {\n            Event.bind(window, 'hashchange', this.event);\n        } else {\n            /* fallback mode */\n            this._timer = setInterval(this.event, this.hash.poll);\n        }\n\n        if(callback) callback(this.hash.toString());\n    },\n    stop: function() {\n        if('onhashchange' in window) {\n            Event.unbind(window, 'hashchange', this.event);\n        } else if(this._timer) {\n            clearInterval(this._timer);\n            this._timer = undefined;\n        }\n    },\n\n}; \n   \nmodule.exports = Hasher;\n//@ sourceURL=kaerus-component-hash/index.js"
));
require.register("visionmedia-node-querystring/index.js", Function("exports, require, module",
"/**\n * Object#toString() ref for stringify().\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Object#hasOwnProperty ref\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Array#indexOf shim.\n */\n\nvar indexOf = typeof Array.prototype.indexOf === 'function'\n  ? function(arr, el) { return arr.indexOf(el); }\n  : function(arr, el) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i] === el) return i;\n      }\n      return -1;\n    };\n\n/**\n * Array.isArray shim.\n */\n\nvar isArray = Array.isArray || function(arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/**\n * Object.keys shim.\n */\n\nvar objectKeys = Object.keys || function(obj) {\n  var ret = [];\n  for (var key in obj) ret.push(key);\n  return ret;\n};\n\n/**\n * Array#forEach shim.\n */\n\nvar forEach = typeof Array.prototype.forEach === 'function'\n  ? function(arr, fn) { return arr.forEach(fn); }\n  : function(arr, fn) {\n      for (var i = 0; i < arr.length; i++) fn(arr[i]);\n    };\n\n/**\n * Array#reduce shim.\n */\n\nvar reduce = function(arr, fn, initial) {\n  if (typeof arr.reduce === 'function') return arr.reduce(fn, initial);\n  var res = initial;\n  for (var i = 0; i < arr.length; i++) res = fn(res, arr[i]);\n  return res;\n};\n\n/**\n * Create a nullary object if possible\n */\n\nfunction createObject() {\n  return Object.create\n    ? Object.create(null)\n    : {};\n}\n\n/**\n * Cache non-integer test regexp.\n */\n\nvar isint = /^[0-9]+$/;\n\nfunction promote(parent, key) {\n  if (parent[key].length == 0) return parent[key] = createObject();\n  var t = createObject();\n  for (var i in parent[key]) {\n    if (hasOwnProperty.call(parent[key], i)) {\n      t[i] = parent[key][i];\n    }\n  }\n  parent[key] = t;\n  return t;\n}\n\nfunction parse(parts, parent, key, val) {\n  var part = parts.shift();\n  // end\n  if (!part) {\n    if (isArray(parent[key])) {\n      parent[key].push(val);\n    } else if ('object' == typeof parent[key]) {\n      parent[key] = val;\n    } else if ('undefined' == typeof parent[key]) {\n      parent[key] = val;\n    } else {\n      parent[key] = [parent[key], val];\n    }\n    // array\n  } else {\n    var obj = parent[key] = parent[key] || [];\n    if (']' == part) {\n      if (isArray(obj)) {\n        if ('' != val) obj.push(val);\n      } else if ('object' == typeof obj) {\n        obj[objectKeys(obj).length] = val;\n      } else {\n        obj = parent[key] = [parent[key], val];\n      }\n      // prop\n    } else if (~indexOf(part, ']')) {\n      part = part.substr(0, part.length - 1);\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n      // key\n    } else {\n      if (!isint.test(part) && isArray(obj)) obj = promote(parent, key);\n      parse(parts, obj, part, val);\n    }\n  }\n}\n\n/**\n * Merge parent key/val pair.\n */\n\nfunction merge(parent, key, val){\n  if (~indexOf(key, ']')) {\n    var parts = key.split('[')\n      , len = parts.length\n      , last = len - 1;\n    parse(parts, parent, 'base', val);\n    // optimize\n  } else {\n    if (!isint.test(key) && isArray(parent.base)) {\n      var t = createObject();\n      for (var k in parent.base) t[k] = parent.base[k];\n      parent.base = t;\n    }\n    set(parent.base, key, val);\n  }\n\n  return parent;\n}\n\n/**\n * Compact sparse arrays.\n */\n\nfunction compact(obj) {\n  if ('object' != typeof obj) return obj;\n\n  if (isArray(obj)) {\n    var ret = [];\n\n    for (var i in obj) {\n      if (hasOwnProperty.call(obj, i)) {\n        ret.push(obj[i]);\n      }\n    }\n\n    return ret;\n  }\n\n  for (var key in obj) {\n    obj[key] = compact(obj[key]);\n  }\n\n  return obj;\n}\n\n/**\n * Restore Object.prototype.\n * see pull-request #58\n */\n\nfunction restoreProto(obj) {\n  if (!Object.create) return obj;\n  if (isArray(obj)) return obj;\n  if (obj && 'object' != typeof obj) return obj;\n\n  for (var key in obj) {\n    if (hasOwnProperty.call(obj, key)) {\n      obj[key] = restoreProto(obj[key]);\n    }\n  }\n\n  obj.__proto__ = Object.prototype;\n  return obj;\n}\n\n/**\n * Parse the given obj.\n */\n\nfunction parseObject(obj){\n  var ret = { base: {} };\n\n  forEach(objectKeys(obj), function(name){\n    merge(ret, name, obj[name]);\n  });\n\n  return compact(ret.base);\n}\n\n/**\n * Parse the given str.\n */\n\nfunction parseString(str){\n  var ret = reduce(String(str).split('&'), function(ret, pair){\n    var eql = indexOf(pair, '=')\n      , brace = lastBraceInKey(pair)\n      , key = pair.substr(0, brace || eql)\n      , val = pair.substr(brace || eql, pair.length)\n      , val = val.substr(indexOf(val, '=') + 1, val.length);\n\n    // ?foo\n    if ('' == key) key = pair, val = '';\n    if ('' == key) return ret;\n\n    return merge(ret, decode(key), decode(val));\n  }, { base: createObject() }).base;\n\n  return restoreProto(compact(ret));\n}\n\n/**\n * Parse the given query `str` or `obj`, returning an object.\n *\n * @param {String} str | {Object} obj\n * @return {Object}\n * @api public\n */\n\nexports.parse = function(str){\n  if (null == str || '' == str) return {};\n  return 'object' == typeof str\n    ? parseObject(str)\n    : parseString(str);\n};\n\n/**\n * Turn the given `obj` into a query string\n *\n * @param {Object} obj\n * @return {String}\n * @api public\n */\n\nvar stringify = exports.stringify = function(obj, prefix) {\n  if (isArray(obj)) {\n    return stringifyArray(obj, prefix);\n  } else if ('[object Object]' == toString.call(obj)) {\n    return stringifyObject(obj, prefix);\n  } else if ('string' == typeof obj) {\n    return stringifyString(obj, prefix);\n  } else {\n    return prefix + '=' + encodeURIComponent(String(obj));\n  }\n};\n\n/**\n * Stringify the given `str`.\n *\n * @param {String} str\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyString(str, prefix) {\n  if (!prefix) throw new TypeError('stringify expects an object');\n  return prefix + '=' + encodeURIComponent(str);\n}\n\n/**\n * Stringify the given `arr`.\n *\n * @param {Array} arr\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyArray(arr, prefix) {\n  var ret = [];\n  if (!prefix) throw new TypeError('stringify expects an object');\n  for (var i = 0; i < arr.length; i++) {\n    ret.push(stringify(arr[i], prefix + '[' + i + ']'));\n  }\n  return ret.join('&');\n}\n\n/**\n * Stringify the given `obj`.\n *\n * @param {Object} obj\n * @param {String} prefix\n * @return {String}\n * @api private\n */\n\nfunction stringifyObject(obj, prefix) {\n  var ret = []\n    , keys = objectKeys(obj)\n    , key;\n\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    key = keys[i];\n    if ('' == key) continue;\n    if (null == obj[key]) {\n      ret.push(encodeURIComponent(key) + '=');\n    } else {\n      ret.push(stringify(obj[key], prefix\n        ? prefix + '[' + encodeURIComponent(key) + ']'\n        : encodeURIComponent(key)));\n    }\n  }\n\n  return ret.join('&');\n}\n\n/**\n * Set `obj`'s `key` to `val` respecting\n * the weird and wonderful syntax of a qs,\n * where \"foo=bar&foo=baz\" becomes an array.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\nfunction set(obj, key, val) {\n  var v = obj[key];\n  if (undefined === v) {\n    obj[key] = val;\n  } else if (isArray(v)) {\n    v.push(val);\n  } else {\n    obj[key] = [v, val];\n  }\n}\n\n/**\n * Locate last brace in `str` within the key.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction lastBraceInKey(str) {\n  var len = str.length\n    , brace\n    , c;\n  for (var i = 0; i < len; ++i) {\n    c = str[i];\n    if (']' == c) brace = false;\n    if ('[' == c) brace = true;\n    if ('=' == c && !brace) return i;\n  }\n}\n\n/**\n * Decode `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction decode(str) {\n  try {\n    return decodeURIComponent(str.replace(/\\+/g, ' '));\n  } catch (err) {\n    return str;\n  }\n}\n//@ sourceURL=visionmedia-node-querystring/index.js"
));
require.register("jb55-domready/index.js", Function("exports, require, module",
"/*!\n  * domready (c) Dustin Diaz 2012 - License MIT\n  */\n!function (name, definition) {\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n}('domready', function (ready) {\n\n  var fns = [], fn, f = false\n    , doc = document\n    , testEl = doc.documentElement\n    , hack = testEl.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , addEventListener = 'addEventListener'\n    , onreadystatechange = 'onreadystatechange'\n    , readyState = 'readyState'\n    , loaded = /^loade|c/.test(doc[readyState])\n\n  function flush(f) {\n    loaded = 1\n    while (f = fns.shift()) f()\n  }\n\n  doc[addEventListener] && doc[addEventListener](domContentLoaded, fn = function () {\n    doc.removeEventListener(domContentLoaded, fn, f)\n    flush()\n  }, f)\n\n\n  hack && doc.attachEvent(onreadystatechange, fn = function () {\n    if (/^c/.test(doc[readyState])) {\n      doc.detachEvent(onreadystatechange, fn)\n      flush()\n    }\n  })\n\n  return (ready = hack ?\n    function (fn) {\n      self != top ?\n        loaded ? fn() : fns.push(fn) :\n        function () {\n          try {\n            testEl.doScroll('left')\n          } catch (e) {\n            return setTimeout(function() { ready(fn) }, 50)\n          }\n          fn()\n        }()\n    } :\n    function (fn) {\n      loaded ? fn() : fns.push(fn)\n    })\n})//@ sourceURL=jb55-domready/index.js"
));
require.register("jwerle-doT/doT.js", Function("exports, require, module",
"// doT.js\n// 2011, Laura Doktorova, https://github.com/olado/doT\n// Licensed under the MIT license.\n\n(function() {\n\t\"use strict\";\n\n\tvar doT = {\n\t\tversion: '1.0.0',\n\t\ttemplateSettings: {\n\t\t\tevaluate:    /\\{\\{([\\s\\S]+?\\}?)\\}\\}/g,\n\t\t\tinterpolate: /\\{\\{=([\\s\\S]+?)\\}\\}/g,\n\t\t\tencode:      /\\{\\{!([\\s\\S]+?)\\}\\}/g,\n\t\t\tuse:         /\\{\\{#([\\s\\S]+?)\\}\\}/g,\n\t\t\tuseParams:   /(^|[^\\w$])def(?:\\.|\\[[\\'\\\"])([\\w$\\.]+)(?:[\\'\\\"]\\])?\\s*\\:\\s*([\\w$\\.]+|\\\"[^\\\"]+\\\"|\\'[^\\']+\\'|\\{[^\\}]+\\})/g,\n\t\t\tdefine:      /\\{\\{##\\s*([\\w\\.$]+)\\s*(\\:|=)([\\s\\S]+?)#\\}\\}/g,\n\t\t\tdefineParams:/^\\s*([\\w$]+):([\\s\\S]+)/,\n\t\t\tconditional: /\\{\\{\\?(\\?)?\\s*([\\s\\S]*?)\\s*\\}\\}/g,\n\t\t\titerate:     /\\{\\{~\\s*(?:\\}\\}|([\\s\\S]+?)\\s*\\:\\s*([\\w$]+)\\s*(?:\\:\\s*([\\w$]+))?\\s*\\}\\})/g,\n\t\t\tvarname:\t'it',\n\t\t\tstrip:\t\ttrue,\n\t\t\tappend:\t\ttrue,\n\t\t\tselfcontained: false\n\t\t},\n\t\ttemplate: undefined, //fn, compile template\n\t\tcompile:  undefined  //fn, for express\n\t};\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = doT;\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(function(){return doT;});\n\t} else {\n\t\t(function(){ return this || (0,eval)('this'); }()).doT = doT;\n\t}\n\n\tfunction encodeHTMLSource() {\n\t\tvar encodeHTMLRules = { \"&\": \"&#38;\", \"<\": \"&#60;\", \">\": \"&#62;\", '\"': '&#34;', \"'\": '&#39;', \"/\": '&#47;' },\n\t\t\tmatchHTML = /&(?!#?\\w+;)|<|>|\"|'|\\//g;\n\t\treturn function() {\n\t\t\treturn this ? this.replace(matchHTML, function(m) {return encodeHTMLRules[m] || m;}) : this;\n\t\t};\n\t}\n\tString.prototype.encodeHTML = encodeHTMLSource();\n\n\tvar startend = {\n\t\tappend: { start: \"'+(\",      end: \")+'\",      endencode: \"||'').toString().encodeHTML()+'\" },\n\t\tsplit:  { start: \"';out+=(\", end: \");out+='\", endencode: \"||'').toString().encodeHTML();out+='\"}\n\t}, skip = /$^/;\n\n\tfunction resolveDefs(c, block, def) {\n\t\treturn ((typeof block === 'string') ? block : block.toString())\n\t\t.replace(c.define || skip, function(m, code, assign, value) {\n\t\t\tif (code.indexOf('def.') === 0) {\n\t\t\t\tcode = code.substring(4);\n\t\t\t}\n\t\t\tif (!(code in def)) {\n\t\t\t\tif (assign === ':') {\n\t\t\t\t\tif (c.defineParams) value.replace(c.defineParams, function(m, param, v) {\n\t\t\t\t\t\tdef[code] = {arg: param, text: v};\n\t\t\t\t\t});\n\t\t\t\t\tif (!(code in def)) def[code]= value;\n\t\t\t\t} else {\n\t\t\t\t\tnew Function(\"def\", \"def['\"+code+\"']=\" + value)(def);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn '';\n\t\t})\n\t\t.replace(c.use || skip, function(m, code) {\n\t\t\tif (c.useParams) code = code.replace(c.useParams, function(m, s, d, param) {\n\t\t\t\tif (def[d] && def[d].arg && param) {\n\t\t\t\t\tvar rw = (d+\":\"+param).replace(/'|\\\\/g, '_');\n\t\t\t\t\tdef.__exp = def.__exp || {};\n\t\t\t\t\tdef.__exp[rw] = def[d].text.replace(new RegExp(\"(^|[^\\\\w$])\" + def[d].arg + \"([^\\\\w$])\", \"g\"), \"$1\" + param + \"$2\");\n\t\t\t\t\treturn s + \"def.__exp['\"+rw+\"']\";\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar v = new Function(\"def\", \"return \" + code)(def);\n\t\t\treturn v ? resolveDefs(c, v, def) : v;\n\t\t});\n\t}\n\n\tfunction unescape(code) {\n\t\treturn code.replace(/\\\\('|\\\\)/g, \"$1\").replace(/[\\r\\t\\n]/g, ' ');\n\t}\n\n\tdoT.template = function(tmpl, c, def) {\n\t\tc = c || doT.templateSettings;\n\t\tvar cse = c.append ? startend.append : startend.split, needhtmlencode, sid = 0, indv,\n\t\t\tstr  = (c.use || c.define) ? resolveDefs(c, tmpl, def || {}) : tmpl;\n\n\t\tstr = (\"var out='\" + (c.strip ? str.replace(/(^|\\r|\\n)\\t* +| +\\t*(\\r|\\n|$)/g,' ')\n\t\t\t\t\t.replace(/\\r|\\n|\\t|\\/\\*[\\s\\S]*?\\*\\//g,''): str)\n\t\t\t.replace(/'|\\\\/g, '\\\\$&')\n\t\t\t.replace(c.interpolate || skip, function(m, code) {\n\t\t\t\treturn cse.start + unescape(code) + cse.end;\n\t\t\t})\n\t\t\t.replace(c.encode || skip, function(m, code) {\n\t\t\t\tneedhtmlencode = true;\n\t\t\t\treturn cse.start + unescape(code) + cse.endencode;\n\t\t\t})\n\t\t\t.replace(c.conditional || skip, function(m, elsecase, code) {\n\t\t\t\treturn elsecase ?\n\t\t\t\t\t(code ? \"';}else if(\" + unescape(code) + \"){out+='\" : \"';}else{out+='\") :\n\t\t\t\t\t(code ? \"';if(\" + unescape(code) + \"){out+='\" : \"';}out+='\");\n\t\t\t})\n\t\t\t.replace(c.iterate || skip, function(m, iterate, vname, iname) {\n\t\t\t\tif (!iterate) return \"';} } out+='\";\n\t\t\t\tsid+=1; indv=iname || \"i\"+sid; iterate=unescape(iterate);\n\t\t\t\treturn \"';var arr\"+sid+\"=\"+iterate+\";if(arr\"+sid+\"){var \"+vname+\",\"+indv+\"=-1,l\"+sid+\"=arr\"+sid+\".length-1;while(\"+indv+\"<l\"+sid+\"){\"\n\t\t\t\t\t+vname+\"=arr\"+sid+\"[\"+indv+\"+=1];out+='\";\n\t\t\t})\n\t\t\t.replace(c.evaluate || skip, function(m, code) {\n\t\t\t\treturn \"';\" + unescape(code) + \"out+='\";\n\t\t\t})\n\t\t\t+ \"';return out;\")\n\t\t\t.replace(/\\n/g, '\\\\n').replace(/\\t/g, '\\\\t').replace(/\\r/g, '\\\\r')\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+='';/g, '$1').replace(/\\+''/g, '')\n\t\t\t.replace(/(\\s|;|\\}|^|\\{)out\\+=''\\+/g,'$1out+=');\n\n\t\tif (needhtmlencode && c.selfcontained) {\n\t\t\tstr = \"String.prototype.encodeHTML=(\" + encodeHTMLSource.toString() + \"());\" + str;\n\t\t}\n\t\ttry {\n\t\t\treturn new Function(c.varname, str);\n\t\t} catch (e) {\n\t\t\tif (typeof console !== 'undefined') console.log(\"Could not create a template function: \" + str);\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\tdoT.compile = function(tmpl, def) {\n\t\treturn doT.template(tmpl, null, def);\n\t};\n}());\n//@ sourceURL=jwerle-doT/doT.js"
));
require.register("component-domify/index.js", Function("exports, require, module",
"\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Wrap map from jquery.\n */\n\nvar map = {\n  option: [1, '<select multiple=\"multiple\">', '</select>'],\n  optgroup: [1, '<select multiple=\"multiple\">', '</select>'],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  thead: [1, '<table>', '</table>'],\n  tbody: [1, '<table>', '</table>'],\n  tfoot: [1, '<table>', '</table>'],\n  colgroup: [1, '<table>', '</table>'],\n  caption: [1, '<table>', '</table>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  td: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  th: [3, '<table><tbody><tr>', '</tr></tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],\n  _default: [0, '', '']\n};\n\n/**\n * Parse `html` and return the children.\n *\n * @param {String} html\n * @return {Array}\n * @api private\n */\n\nfunction parse(html) {\n  if ('string' != typeof html) throw new TypeError('String expected');\n\n  // tag name\n  var m = /<([\\w:]+)/.exec(html);\n  if (!m) throw new Error('No elements were generated.');\n  var tag = m[1];\n\n  // body support\n  if (tag == 'body') {\n    var el = document.createElement('html');\n    el.innerHTML = html;\n    return el.removeChild(el.lastChild);\n  }\n\n  // wrap map\n  var wrap = map[tag] || map._default;\n  var depth = wrap[0];\n  var prefix = wrap[1];\n  var suffix = wrap[2];\n  var el = document.createElement('div');\n  el.innerHTML = prefix + html + suffix;\n  while (depth--) el = el.lastChild;\n\n  var els = el.children;\n  if (1 == els.length) {\n    return el.removeChild(els[0]);\n  }\n\n  var fragment = document.createDocumentFragment();\n  while (els.length) {\n    fragment.appendChild(el.removeChild(els[0]));\n  }\n\n  return fragment;\n}\n//@ sourceURL=component-domify/index.js"
));
require.register("sfap/index.js", Function("exports, require, module",
"\n/**\n * Module dependencies\n */\n\nvar request = require('superagent')\n  , topcoat = require('topcoat')\n  , EventEmitter = require('events').EventEmitter\n  , parseUrl = require('url').parse\n  , debug = require('debug')\n  , qs = require('querystring')\n  , hash = require('hash')\n  , domeready = require('domready')\n  , sregex = require('sregex')\n  , dot = require('doT')\n  , wait = setTimeout\n  , global = global || window\n\n\n\n/**\n * Initializations\n */\n\n// initialize hash\nhash.init();\n\n\n// initialize `dot` settings\ndot.templateSettings.varname = 'view';\n\n\n/**\n * Generates an sfap `app` object\n *\n * @api public\n * @param {String} `name`\n * @param {Object} `location`\n */\n\nmodule.exports = sfap;\nfunction sfap (name, location) {\n\tname = name || 'app-' + (Math.random().toString(16).slice(2));\n\tvar app = initialize({\n\t\tname: name, \n\t\tlocation: location || window.location || {}\n\t})\n\n\treturn app;\n}\n\n\n/**\n * Initializes the `app` object\n *\n * @api private\n * @param {Object} `app`\n * @return {Object}\n */\n\nfunction initialize (app) {\n\t// internal settings\n\tvar settings = {}\n\t  , cache = {view: {}, module: {}}\n\n\n\t// bind topcoat to `.ui`\n\tapp.ui = topcoat;\n\n\n\t// filter stack\n\tapp.stack = [];\n\n\t\n\t// bind `dot.template` and attach to `app`\n\tapp.template = function (str) {\n\t\treturn dot.template(str);\n\t};\n\n\n\t// util object\n\tapp.util = {\n\t\trequest: request,\n\t\tparseUrl: parseUrl,\n\t\tdebug: debug,\n\t\tqs: qs\n\t};\n\n\t\n\t// (#) Hash change event management object\n\tapp.hash = {\n\t\tstack: [],\n\t\ton: hash.route.bind(hash),\n\t\tset: hash.update.bind(hash),\n\t\tuse: function (fn) {\n\t\t\tif ('function' !== typeof fn) throw new TypeError(\"expecting `function`\");\n\t\t\telse this.stack.push(fn);\n\t\t\treturn this;\n\t\t}\n\t};\n\n\tapp.hash.on('.*', function (to, from) {\n\t\tvar stack = [].concat(app.hash.stack) // clone\n\n\t\t!function next () {\n\t\t\tvar fn = stack.shift()\n\t\t\tif ('function' === typeof fn) {\n\t\t\t\tfn(to, from, next);\n\t\t\t}\n\t\t}();\n\n\t});\n\n\n\t/**\n\t * Bind a callback for when the dom is ready\n\t *\n\t * @api public\n\t * @param {Function} `fn`\n\t */\n\n\tapp.ready = function (fn) {\n\t\tif ('function' !== typeof fn) throw new TypeError(\"expecting `function`\");\n\t\telse domeready(fn.bind(this));\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Logs messages to stdout (console) if\n\t * debugging is enabled via the `.enable('debug')`\n\t * function call\n\t *\n\t * @api public\n\t */\n\n\tapp.debug = function () {\n\t\tdebug(app.name).apply(null, arguments);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Returns the query string parsed or\n\t * a value of a provided argument\n\t *\n\t * @api public\n\t * @param {String} `arg` - optional\n\t */\n\n\tapp.query = function (arg) {\n\t\tvar parsed = qs.parse(this.location.search.substr(1)) || {}\n\t\tif (undefined === arg) return parsed;\n\t\telse return parsed[arg];\n\t};\n\n\n\t/**\n\t * This function should be called when\n\t * the page has loaded\n\t *\n\t * @api public\n\t * @param {}\n\t */\n\n\tapp.init = function (url) {\n\t\tvar request = new Request(url)\n\n\t\tif (!this.stack.length) return this;\n\n\t\t!function next () {\n\t\t\tvar fn = app.stack.shift()\n\t\t\tif ('function' === typeof fn) {\n\t\t\t\tfn(request, next);\n\t\t\t}\n\t\t}();\n\n\t\treturn this;\n\t};\n\t\n\t\n\t/**\n\t * Pushes a function to the `.stack` for\n\t * filtering during a page request\n\t *\n\t * @api public\n\t * @param {Function} `fn`\n\t */\n\n\tapp.use = function (fn) {\n\t\tthis.stack.push(fn);\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Enables certain settings\n\t *\n\t * @api public\n\t * @param {String} `setting`\n\t */\n\n\tapp.enable = function (setting) {\n\t\tswitch (setting) {\n\t\t\tcase 'debug':\n\t\t\t\tdebug.enable(app.name);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsettings[setting] = true;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Disables certain settings\n\t *\n\t * @api public\n\t * @param {String} `setting`\n\t */\n\n\tapp.disable = function (setting) {\n\t\tswitch (setting) {\n\t\t\tcase 'debug':\n\t\t\t\tdebug.disable(app.name);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsettings[setting] = false;\n\t\t}\n\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Pushes a route to match to the stack\n\t *\n\t * @api public\n\t * @param {String} `url`\n\t * @param {Function} `fn`\n\t */\n\n\tapp.route = \n\tapp.match = function (url, fn) {\n\t\tvar route = new Route({\n\t\t\turl: url, fn: fn\n\t\t});\n\n\t\tthis.use(function (req, next) {\n\t\t\tif (route.test(req.pathname)) {\n\t\t\t\treq.params = route.parse(req.url)\n\t\t\t\troute.fn(req, next);\n\t\t\t} else {\n\t\t\t\tnext();\n\t\t\t}\n\t\t});\n\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Asynchronously load views\n\t *\n\t * @api public\n\t * @param {String} `name`\n\t * @param {}\n\t */\n\n\tapp.view = function (name, data, fn) {\n\t\tfn = ('function' === typeof data)? data : fn;\n\t\tdata = ('object' === typeof data)? data : {};\n\n\t\tif ('function' === typeof cache.view[name]) {\n\t\t\twait(fn.bind(null, decodeURIComponent(cache.view[name](data), null)));\n\t\t\treturn this;\n\t\t}\n\n\t\trequest\n\t\t\t.get('/view/'+ name.replace(/\\./g,'/'))\n\t\t\t.set('Accept', 'application/json')\n\t\t\t.end(function (res) {\n\t\t\t\tvar tpl = cache.view[name] = dot.template(res.text || '');\n\t\t\t\tif ('function' === typeof fn) decodeURIComponent(fn(null, tpl(data)));\n\t\t\t});\n\n\t\treturn this;\n\t};\n\n\n\t/**\n\t * Asynchronously load modules\n\t *\n\t * @api public\n\t * @param {String} `name`\n\t * @param {}\n\t */\n\n\tapp.module = function (name, data, fn) {\n\t\tfn = ('function' === typeof data)? data : fn;\n\t\tdata = ('object' === typeof data)? data : {};\n\n\t\tif ('function' === typeof cache.module[name]) {\n\t\t\twait(fn.bind(null, decodeURIComponent(cache.module[name](data), null)));\n\t\t\treturn this;\n\t\t}\n\n\t\trequest\n\t\t\t.get('/module/'+ name.replace(/\\./g,'/'))\n\t\t\t.set('Accept', 'application/js')\n\t\t\t.end(function (res) {\n\t\t\t\tvar src = res.text\n\t\t\t\t  , mod = {exports: {}}\n\t\t\t\t  , modFn = new Function ('require', 'module', 'exports', ('\\n//@ sourceURL='+ res.req.url +'.js\\n' + src)).bind(global);\n\n\t\t\t\ttry {\n\t\t\t\t\tmodFn(require, mod, mod.exports);\n\t\t\t\t\tfn(null, mod.exports, mod);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tfn(e);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\treturn this;\n\t};\n\n\treturn app;\n}\n\n\n/**\n * `Router` constructor\n *\n * @api public\n * @param {Object} `opts`\n */\n\nsfap.Route = Route;\nfunction Route (opts) {\n\tif ('object' !== typeof opts) throw new TypeError(\"expecting object\");\n\telse if (undefined === opts.url) throw new TypeError(\"expecting `.url`\");\n\telse if (undefined === opts.fn) throw new TypeError(\"expecting `.fn`\");\n\n\tthis.url = opts.url;\n\tthis.regex = sregex(opts.url);\n\tthis.fn = opts.fn;\n}\n\n\n/**\n * Returns true if the provided url matches the route\n *\n * @api public\n * @param\t{String} `url`\n */\n\nRoute.prototype.test = function (url) {\n\treturn this.regex.test(url);\n};\n\n\n/**\n * Parses a url into variables defined\n * by the route\n *\n * @api public\n * @param\t{String} `url`\n */\n\nRoute.prototype.parse = function (url) {\n\treturn this.regex.parse(url);\n};\n\n\n/**\n * `Request` constructor\n *\n * @api public\n */\n\nsfap.Request = Request;\nfunction Request (url) {\n\tEventEmitter.call(this);\n\tvar parsed = parseUrl(url);\n\tthis.url = url;\n\tthis.hash = parsed.hash;\n  this.host = parsed.host;\n  this.port = parsed.port;\n  this.hostname = parsed.hostname;\n  this.href = parsed.href;\n  this.pathname = parsed.pathname;\n  this.protocol = parsed.protocol;\n  this.query = parsed.query;\n  this.search = parsed.search;\n}\n\n// inherit from `EventEmitter`\nRequest.prototype.__proto__ = EventEmitter.prototype;\n\n\n//@ sourceURL=sfap/index.js"
));
require.alias("visionmedia-superagent/lib/client.js", "sfap/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "sfap/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("RedVentures-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");

require.alias("sfapco-topcoat.js/index.js", "sfap/deps/topcoat/index.js");
require.alias("juliangruber-events/index.js", "sfapco-topcoat.js/deps/events/index.js");
require.alias("component-emitter/index.js", "juliangruber-events/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-domify/index.js", "sfapco-topcoat.js/deps/domify/index.js");

require.alias("jwerle-sregex/index.js", "sfap/deps/sregex/index.js");

require.alias("juliangruber-events/index.js", "sfap/deps/events/index.js");
require.alias("component-emitter/index.js", "juliangruber-events/deps/emitter/index.js");
require.alias("component-indexof/index.js", "component-emitter/deps/indexof/index.js");

require.alias("component-url/index.js", "sfap/deps/url/index.js");

require.alias("visionmedia-debug/index.js", "sfap/deps/debug/index.js");
require.alias("visionmedia-debug/debug.js", "sfap/deps/debug/debug.js");

require.alias("component-querystring/index.js", "sfap/deps/querystring/index.js");
require.alias("component-trim/index.js", "component-querystring/deps/trim/index.js");

require.alias("kaerus-component-hash/index.js", "sfap/deps/hash/index.js");
require.alias("kaerus-component-event/index.js", "kaerus-component-hash/deps/event/index.js");
require.alias("kaerus-component-elem/shims/querySelector.js", "kaerus-component-event/deps/elem/shims/querySelector.js");
require.alias("kaerus-component-elem/index.js", "kaerus-component-event/deps/elem/index.js");

require.alias("kaerus-component-emitter/index.js", "kaerus-component-event/deps/emitter/index.js");

require.alias("visionmedia-node-querystring/index.js", "sfap/deps/querystring/index.js");

require.alias("jb55-domready/index.js", "sfap/deps/domready/index.js");

require.alias("jwerle-doT/doT.js", "sfap/deps/doT/doT.js");
require.alias("jwerle-doT/doT.js", "sfap/deps/doT/index.js");
require.alias("jwerle-doT/doT.js", "jwerle-doT/index.js");

require.alias("component-domify/index.js", "sfap/deps/domify/index.js");

